@page
@model Hillerød_Sejklub.Pages.BegivenhederModel
@{
	ViewData["Title"] = "Begivenheder";
	<!DOCTYPE html>
	<html lang="da">
	<head>
		<meta charset="UTF-8" />
		<title>Begivenheder</title>
	</head>
	<body>
		<h1>Opret og Tilmeld Til Begivenheder</h1>

		<h2>Opret en Begivenhed</h2>
		<form id="eventForm">
			<label for="eventType">Vælg Begivenhed:</label>
			<select id="eventType" required>
				<option value="Standerhejsning">Standerhejsning</option>
				<option value="Arbejdsdag">Arbejdsdag</option>
				<option value="Bro-optagning">Bro-optagning</option>
				<option value="Sommerfrokost">Sommerfrokost</option>
			</select><br><br>
			<label for="eventDate">Dato og Tid:</label>
			<input type="datetime-local" id="eventDate" required /><br><br>
			<button type="button" onclick="opretBegivenhed()">Opret Begivenhed</button>
		</form>

		<h2>Liste Over Begivenheder</h2>
		<ul id="eventList"></ul>

		<h2>Medlemmer Tilmeldes Begivenheder</h2>
		<form id="signupForm">
			<label for="memberID">Medlems ID:</label>
			<input type="number" id="memberID" required /><br><br>

			<label for="selectEvent">Vælg Begivenhed:</label>
			<select id="selectEvent"></select><br><br>

			<button type="button" onclick="tilmeldMedlem()">Tilmeld</button>
		</form>

		<h2>Tilmeldte Medlemmer</h2>
		<ul id="registrations"></ul>

		<script>
			const events = [];
			const registrations = [];

			function opretBegivenhed() {
			const eventType = document.getElementById('eventType').value;
			const eventDateStr = document.getElementById('eventDate').value;
			const eventDate = new Date(eventDateStr);

			const nyEvent = {
			id: Date.now(), // bruger timestamp som unikt ID
			type: eventType,
			date: eventDate
			};
			events.push(nyEvent);
			opdaterEventListe();
			opdaterEventDropdown();
			}

			function opdaterEventListe() {
			const ul = document.getElementById('eventList');
			ul.innerHTML = '';
			events.forEach(ev => {
			const li = document.createElement('li');
			li.textContent = `${ev.type} - ${ev.date.toLocaleString()}`;
			ul.appendChild(li);
			});
			}

			function opdaterEventDropdown() {
			const select = document.getElementById('selectEvent');
			select.innerHTML = '';
			events.forEach(ev => {
			const option = document.createElement('option');
			option.value = ev.id;
			option.textContent = `${ev.type} - ${ev.date.toLocaleString()}`;
			select.appendChild(option);
			});
			}

			function tilmeldMedlem() {
			const medlemsID = parseInt(document.getElementById('memberID').value);
			const eventID = parseInt(document.getElementById('selectEvent').value);
			const event = events.find(e => e.id === eventID);

			if (event) {
			registrations.push({
			medlemsID: medlemsID,
			eventID: eventID
			});
			opdaterTilmeldinger();
			}
			}

			function opdaterTilmeldinger() {
			const ul = document.getElementById('registrations');
			ul.innerHTML = '';
			registrations.forEach(reg => {
			const event = events.find(e => e.id === reg.eventID);
			const li = document.createElement('li');
			li.textContent = `Medlems ID: ${reg.medlemsID} - ${event.type} (${event.date.toLocaleString()})`;
			ul.appendChild(li);
			});
			}
		</script>
	</body>
	</html>
}
